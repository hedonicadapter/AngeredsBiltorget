---
  import TagsContainer from '../components/TagsContainer.tsx';
  import CarsContainer from '../components/CarsContainer.jsx';
  import CurrentResultCount from '../components/CurrentResultCount.jsx';
  import ButtonsContainer from '../components/ButtonsContainer.jsx';
  import "../components/styles/showroom.css";
  import Layout from "../layouts/Layout.astro";
  import type Car from '../Models/Car';
  import {
    generateDummyCarData,
    getCompanyInfo,
    getProductCount,
    getProductFiles,
    getProducts,
    upsertProduct,
  } from '../api';
  import {numberFormatter} from '../util/helpers.ts';
  import { DocumentSnapshot } from 'firebase/firestore';

  // TODO: get initial cars here

  const count = await getProductCount();
  const companyInfo = await getCompanyInfo();
---
<Layout>
  <div class="relative">

  
  <section class="container relative flex flex-col items-center w-screen mx-auto ">
    <div class="sticky top-[var(--navbar-height)] pb-20">
      <div class="pb-5"><h1 class="text-4xl md:text-6xl">Gör som <span class="text-6xl underline underline-offset-4 md:text-8xl text-primary">{numberFormatter(companyInfo?.customers)}</span> andra, köp din bil hos oss</h1></div>
      <search class=" gap-[calc(var--golden-ratio)*0.25em] w-full h-40 mb-10 flex flex-col">

        <ButtonsContainer client:load />

        <hr />
        <!-- TODO: not entirely responsive -->
        <div
          class="flex flex-row items-start justify-between tags-and-result-count-container"
        >
          <TagsContainer client:only/>
          <div class="results-count">
            <CurrentResultCount client:load/> /
            <span id="results-available">{count}</span> Resultat
          </div>
        </div>
      </search>
    </div>
    <div>
      <CarsContainer client:load/>
    </div>
  </section>
</div>
</Layout>

  <script>
    import {
      generateDummyCarData,
      getProductCount,
      getProductFiles,
      getProducts,
      upsertProduct,
    } from '../api';
    import type Car from '../Models/Car';
    import { DocumentSnapshot } from 'firebase/firestore';

    const initializeScript = () => {
    // TODO: migrate to astro
    // TODO: fix formatting on all <script/>s

    let oldScrollY = 0;

    const filterContainer = document.querySelector(
      '.filter-container'
    ) as HTMLElement;
    const filterContainerRect = filterContainer?.getBoundingClientRect();
    filterContainer?.style.setProperty(
      '--original-position',
      `${filterContainerRect.top}px`
    );

    const carsContainer = document.querySelector('.cars-container') as HTMLElement;

    const setFilterContainerPosition = () => {
      const section = document.querySelector('section.container') as HTMLElement;
      const navbar = document.querySelector('.navbar-top') as HTMLElement;

      section?.style.setProperty('--navbar-height', `${navbar.offsetHeight}px`);
    };

    const redirectScrollY = (scrollIncrement = 100) => {
      const scrolledToBottom =
        window.scrollY + window.innerHeight === document.body.scrollHeight;
      const direction = window.scrollY > oldScrollY ? 'down' : 'up';

      if (scrolledToBottom) {
        if (direction === 'down')
          carsContainer.scrollBy({
            behavior: 'smooth',
            top: -scrollIncrement * 10,
          });
      }

      if (direction === 'up')
        carsContainer.scrollBy({ behavior: 'smooth', top: scrollIncrement * 10 });
    };

    const handleWindowScrollAttempt = (event: WheelEvent | KeyboardEvent) => {
      if (event instanceof WheelEvent) redirectScrollY( event.deltaY);
      else redirectScrollY();
    };

  window.addEventListener('scroll', setFilterContainerPosition);
  window.addEventListener('wheel', handleWindowScrollAttempt);
  window.addEventListener('keydown', (event: KeyboardEvent) => {
    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {
      handleWindowScrollAttempt(event);
    }
  });

  setFilterContainerPosition();
}

  document.addEventListener('astro:after-swap', initializeScript);
  initializeScript();
  </script>