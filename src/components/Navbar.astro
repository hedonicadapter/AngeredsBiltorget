---
import "./styles/navbar.css";
import NavAnchor from './NavAnchor.tsx';
import Borger from './Borger.tsx';
import Sidebar from './Sidebar.tsx';
---


<div class="navbar-top-bg">
    <nav class="navbar-top">
      <div class="relative flex flex-row items-center justify-between w-full h-full navbar">
        <div class="flex flex-row items-center nav-container nav-container-left">
            <a id="navbar-home" href="/" class="flex flex-row items-center">
                <img id="navbar-logo" src="/images/logo.svg" alt="Angered Biltorget logo"/>
                <h5 class="hidden sm:inline">Angered biltorget</h5>
            </a>
        </div>
        <div class="flex-row items-center nav-container nav-container-right">
            <NavAnchor client:load anchorText="Showroom" anchorHref="/showroom" />
			<NavAnchor client:load anchorText="Om oss" anchorHref="/about" />
            <NavAnchor client:load anchorText="Kontakt" anchorHref="/contact" />
            <NavAnchor client:load anchorText="Kundvagn" anchorHref="/cart" />
            <div class="nav-anchor-highlighter"></div>
        </div>
        <Borger client:load/>
      </div>
    </nav>
    <nav class="navbar-right">
		<Sidebar client:idle>
		  <div slot='anchors' class='z-50 flex flex-col gap-4'>
			  <NavAnchor
			  	client:load
				closeOnClick
				anchorText='Showroom'
				anchorHref='/showroom'
			  />
			  <NavAnchor client:load closeOnClick client:load anchorText="Om oss" anchorHref="/about"/>
			  <NavAnchor client:load closeOnClick anchorText='Kontakt' anchorHref='/contact' />
			  <NavAnchor client:load closeOnClick anchorText='Cart' anchorHref='/cart' />
			</div>
		</Sidebar>
    </nav>
</div>

<script>
declare global {
  interface GlobalEventHandlersEventMap {
    'nav-anchor-mouseover': CustomEvent;
  }
}

	function initializeScript() {
	  const anchorHighlighter = document.querySelector('.nav-anchor-highlighter');
	  const showroomAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="showroom"]');
	  const aboutAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="about"]');
	  const kontaktAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="contact"]');
	  const cartAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="cart"]');
  
	  let oldScrollTop = 0;
  
	  const setAnchorHighlighter = (evt:CustomEvent) => {
		const highlighter = anchorHighlighter as HTMLElement;
		const { left, width } = evt.detail;
		const ratio = window
		  .getComputedStyle(document.documentElement)
		  .getPropertyValue('--golden-ratio');
		const widthInEm = highlighter.parentElement &&
		  width /
		  parseFloat(getComputedStyle(highlighter.parentElement).fontSize);
  
		highlighter.style.setProperty(
		  '--highlighter-width',
		  `${parseFloat(ratio) * widthInEm! - 0.25}em`
		);
		highlighter.style.setProperty('--anchor-left', `${left}px`);
		highlighter.style.setProperty('--anchor-width', `${width}px`);
	  }
  
	  const removeAnchorHighlighterMotionBlur = (evt:Event) => {
		if ((evt as TransitionEvent).propertyName !== 'left') return;
  
		anchorHighlighter!.classList.remove('motion-blur');
	  }
  
	  const setAnchorHighlighterMotionBlur = (evt:Event) => {
		if ((evt as TransitionEvent).propertyName !== 'left') return;
  
		anchorHighlighter!.classList.add('motion-blur');
	  }
  
	  const expandAndContract = () => {
		  const navbar = document.querySelector('.navbar-top');
		  if (!navbar) return;
  
		  const direction = window.scrollY > oldScrollTop ? 'down' : 'up';
  
		  if (direction == 'up' && window.scrollY < 100) {
			  navbar.classList.remove('navbar-contracted');
		  } else if (direction == 'down') {
			  navbar.classList.add('navbar-contracted');
		  }
  
		  oldScrollTop = window.scrollY;
	  }
  
	  const setActiveNavAnchor = () => {
		const page = window.location.pathname.slice(1);
  
		// TODO: broken
		switch (page) {
		  case 'showroom':
			showroomAnchor?.classList.add('active');
  
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'about':
			aboutAnchor?.classList.add('active');
  
			showroomAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'contact':
			kontaktAnchor?.classList.add('active');
  
			showroomAnchor?.classList.remove('active');
			aboutAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'cart':
			cartAnchor?.classList.add('active');
  
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  default:
			showroomAnchor?.classList.remove('active');
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		}
	  }
	  
	anchorHighlighter!.addEventListener('transitionend', removeAnchorHighlighterMotionBlur);
	anchorHighlighter!.addEventListener('transitionstart', setAnchorHighlighterMotionBlur);
  
	  document.addEventListener('nav-anchor-mouseover', setAnchorHighlighter);
	  document.addEventListener('scroll', expandAndContract);
	  setActiveNavAnchor();
	}
	
	document.addEventListener('astro:after-swap', initializeScript);

  initializeScript();

  </script>