---
import "./styles/navbar.css";
import NavAnchor from './NavAnchor.tsx';
import Borger from './Borger.tsx';
import Sidebar from './Sidebar.tsx';
---


<div>
    <nav class="navbar-top">
      <div class="relative w-full h-full flex flex-row justify-between items-center navbar">
        <div class="nav-container nav-container-left flex flex-row items-center">
            <a id="navbar-home" href="/#home" class="flex flex-row items-center">
                <img id="navbar-logo" src="/images/logo.svg" alt="Angered Biltorget logo"/>
                <h5>Angered biltorget</h5>
            </a>
        </div>
        <div class="nav-container nav-container-right flex-row items-center">
            <NavAnchor client:load anchorText="Showroom" anchorHref="showroom" />
            <NavAnchor client:load anchorText="Om oss" anchorHref="#about"/>
            <NavAnchor client:load anchorText="Kontakt" anchorHref="contact" />
            <NavAnchor client:load anchorText="Cart" anchorHref="cart" />
            <div class="nav-anchor-highlighter"></div>
        </div>
        <Borger client:load/>
         
      </div>
    </nav>
    <nav class="navbar-right">
      <Sidebar client:load>
        <div slot="anchors" class="flex flex-col gap-4">
          <NavAnchor client:load anchorText="Showroom" anchorHref="showroom" />
          <NavAnchor client:load anchorText="Om oss" anchorHref="#about"/>
          <NavAnchor client:load anchorText="Kontakt" anchorHref="contact" />
          <NavAnchor client:load anchorText="Cart" anchorHref="cart" />
        </div>
      </Sidebar>
    </nav>
</div>

<script>
	function initializeScript() {
	  const anchorHighlighter = document.querySelector('.nav-anchor-highlighter');
	  const carsAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="showroom"]');
	  const aboutAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="about"]');
	  const kontaktAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="contact"]');
	  const cartAnchor: HTMLAnchorElement | null = document.querySelector('.nav-anchor[href="cart"]');
  
	  let oldScrollTop = 0;
  
	  const setAnchorHighlighter = (evt) => {
		const { left, width } = evt.detail;
		const ratio = window
		  .getComputedStyle(document.documentElement)
		  .getPropertyValue('--golden-ratio');
		const widthInEm =
		  width /
		  parseFloat(getComputedStyle(anchorHighlighter!.parentElement).fontSize);
  
		anchorHighlighter!.style.setProperty(
		  '--highlighter-width',
		  `${ratio * widthInEm - 0.25}em`
		);
		anchorHighlighter!.style.setProperty('--anchor-left', `${left}px`);
		anchorHighlighter!.style.setProperty('--anchor-width', `${width}px`);
	  }
  
	  const removeAnchorHighlighterMotionBlur = (evt) => {
		if (evt.propertyName !== 'left') return;
  
		anchorHighlighter!.classList.remove('motion-blur');
	  }
  
	  const setAnchorHighlighterMotionBlur = (evt) => {
		if (evt.propertyName !== 'left') return;
  
		anchorHighlighter!.classList.add('motion-blur');
	  }
  
	  const expandAndContract = () => {
		  const navbar = document.querySelector('.navbar-top');
		  if (!navbar) return;
  
		  const direction = window.scrollY > oldScrollTop ? 'down' : 'up';
  
		  if (direction == 'up' && window.scrollY < 100) {
			  navbar.classList.remove('navbar-contracted');
		  } else if (direction == 'down') {
			  navbar.classList.add('navbar-contracted');
		  }
  
		  oldScrollTop = window.scrollY;
	  }
  
	  const setActiveNavAnchor = () => {
		const page = window.location.pathname.slice(1);
  
		// TODO: broken
		switch (page) {
		  case 'showroom':
			carsAnchor?.classList.add('active');
  
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'about':
			aboutAnchor?.classList.add('active');
  
			carsAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'contact':
			kontaktAnchor?.classList.add('active');
  
			carsAnchor?.classList.remove('active');
			aboutAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  case 'cart':
			cartAnchor?.classList.add('active');
  
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		  default:
			carsAnchor?.classList.remove('active');
			aboutAnchor?.classList.remove('active');
			kontaktAnchor?.classList.remove('active');
			cartAnchor?.classList.remove('active');
			break;
		}
	  }
	  
	  anchorHighlighter!.addEventListener('transitionend', removeAnchorHighlighterMotionBlur);
	  anchorHighlighter!.addEventListener('transitionstart', setAnchorHighlighterMotionBlur);
  
	  document.addEventListener('nav-anchor-mouseover', setAnchorHighlighter);
	  document.addEventListener('scroll', expandAndContract);
	  setActiveNavAnchor();


	}
	
	document.addEventListener('astro:after-swap', initializeScript);

  initializeScript();

  </script>